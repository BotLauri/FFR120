%% SIR model with temporary immunity.
clear all
tic
L = 100; % Length of the lattice.
N = 1000; % Number of agents. 
initialInfectionRate = 0.01;
d = 0.8; % Probability of moving. 

gammas = 0.01; % Probability of recovery.
betas = 0.2; % Probability of infection. 
alphas = 0.005; % Probability of death when infected.
params = [betas, gammas, alphas];
trials = 1;

% Parameters for 11.4a.
%betas = [0.1, 0.2]; 
%gammas = [0.01, 0.02]; 
%alphas = [0.001:0.0005:0.015]; 
%[betaList, gammaList, alphaList] = meshgrid(betas, gammas, alphas);
%params = [betaList(:), gammaList(:), alphaList(:)];
%trials = 10;

for m = 1:trials
disp(m)

data = zeros(length(params), 7);
for T = 1:length(params)
beta = params(T, 1); gamma = params(T, 2); alpha = params(T, 3);
t = 0; % Number of timesteps. 
SIR = [];
    
% Initialization of the grid. 
lattice = cell(L);
for n = 1:(N - N*initialInfectionRate)
    xCoord = randi(L);
    yCoord = randi(L);
    lattice{xCoord, yCoord} = [lattice{xCoord, yCoord}, 1];
    if (n > (N - 2*N*initialInfectionRate))
        lattice{xCoord, yCoord} = [lattice{xCoord, yCoord}, 2];
    end
end

% Main loop.
while (~CheckForInfected(lattice) && (t < 20000))
    lattice = Diffusion(lattice, d);
    lattice = Infection(lattice, beta);
    lattice = Recovery(lattice, gamma);
    lattice = 
    SIR(t + 1, :) = GetData(lattice);
    if (rem(t, 10) == 0)
        %Plots(lattice, SIR, beta, gamma, t);
        %pause(0.01)
    end
    t = t + 1;
end

SIR(t + 1, :) = GetData(lattice);
Plots(lattice, SIR, beta, gamma, t);

data(T, :) = [beta, gamma, alpha, SIR(end, 1), SIR(end, 2), SIR(end, 3), t];
if (rem(T, 10) == 0)
    disp(T)
end

end % Loop through parameters. 

if (m == 1)
    avgData = data;
else
    avgData = (avgData(:, :) + data(:, :)) / 2;
end

end % Loop through trials. 

toc
